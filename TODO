- foreign function interface?
- refactor define
 - to implement overwriting, id probably need to redesign how the stack works
- add all functions from the tinylisp doc
- memoryleaks?
- add random exit messages like in mit-scheme
- mce? and try to enforce type safety?
- add an evaluation trace
- let and let* args should be in a list to like in Scheme
- arithmetic functions do not do typechecks, ill formed expressions could fall down there
- extend testlist to cover new primitive procedures and errors
- implement set!
- implement an include macro which uses set! or seq to set an include guard on each file loaded and cleans up after the initial procedure finishes